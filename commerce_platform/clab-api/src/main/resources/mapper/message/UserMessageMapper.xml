<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.clab.mpf.shop.dao.message.IUserMessageMapper" >
  <resultMap id="BaseResultMap" type="io.clab.mpf.shop.entity.message.UserMessage" >
    <id column="user_message_id" property="userMessageId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="message_id" property="messageId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="del_state" property="delState" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_message_id, user_id, message_id, create_time, state, update_time, del_state
  </sql>
  <select id="getOneById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user_message
    where user_message_id = #{id,jdbcType=INTEGER}
  </select>
  <resultMap type="java.util.HashMap" id="map">
  	<result column="create_time" property="createTime" jdbcType="TIMESTAMP" typeHandler="util.EmptyStringIfNull"/>
  	<result column="province" property="province" jdbcType="VARCHAR" typeHandler="util.EmptyStringIfNull"/>
  	<result column="city" property="city" jdbcType="VARCHAR" typeHandler="util.EmptyStringIfNull"/>
  	<result column="county" property="county" jdbcType="VARCHAR" typeHandler="util.EmptyStringIfNull"/>
  	<result column="address" property="address" jdbcType="VARCHAR" typeHandler="util.EmptyStringIfNull"/>
  	<result column="phone" property="phone" jdbcType="VARCHAR" typeHandler="util.EmptyStringIfNull"/>
  	<result column="company_name" property="companyName" jdbcType="VARCHAR" typeHandler="util.EmptyStringIfNull"/>
  </resultMap>
  <select id="getUserListByMessageId" resultMap="map">
  select t.create_time,u.province,u.city,u.county,u.address,u.phone,u.company_name 
	from t_user_message t
	LEFT JOIN t_user u
	on u.user_id=t.user_id
where message_id=#{messageId}
  </select>
  <!-- 批量插入消息记录 -->
  <insert id="addMessageRecord">
  insert into t_user_message(
user_id,
message_id,
create_time,
update_time
) values
<foreach collection="list" item="item" separator=",">
 (
 #{item.userId},#{item.messageId},#{item.createTime},#{item.updateTime}
 ) 
</foreach>
  </insert>
  <insert id="insert" parameterType="io.clab.mpf.shop.entity.message.UserMessage" >
    insert into t_user_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userMessageId != null" >
        user_message_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="messageId != null" >
        message_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="delState != null" >
        del_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userMessageId != null" >
        #{userMessageId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="messageId != null" >
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delState != null" >
        #{delState,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="io.clab.mpf.shop.entity.message.UserMessage" >
    update t_user_message
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="messageId != null" >
        message_id = #{messageId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delState != null" >
        del_state = #{delState,jdbcType=TINYINT},
      </if>
    </set>
    where user_message_id = #{userMessageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.clab.mpf.shop.entity.message.UserMessage" >
    update t_user_message
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="messageId != null" >
        message_id = #{messageId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delState != null" >
        del_state = #{delState,jdbcType=TINYINT},
      </if>
    </set>
    where user_message_id = #{userMessageId,jdbcType=INTEGER}
  </update>
  <!-- 前端用户获取  消息未读数 -->
  <select id="getNoReadCount" resultType="java.lang.Integer">
  	select count(user_message_id) from 
  	t_user_message um 
  	left join 
  	t_message m 
  	on m.message_id=um.message_id
  	 where um.user_id=#{userId} and state=2 
  	 and um.del_state=2 and m.del_state=2
  </select>
  <!--前端用户获取  消息数   -->
  <select id="getMessageCount" resultType="java.lang.Integer">
  		select count(user_message_id) from 
  	t_user_message um 
  	left join 
  	t_message m 
  	on m.message_id=um.message_id
  	 where um.user_id=#{userId} and um.del_state=2 and m.del_state=2 and state=1
UNION
	select count(user_message_id) from 
  	t_user_message um 
  	left join 
  	t_message m 
  	on m.message_id=um.message_id
  	 where um.user_id=#{userId} and um.del_state=2 and m.del_state=2 and state=2
  </select>
</mapper>